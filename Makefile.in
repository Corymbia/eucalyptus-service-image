CPUS   ?= 1
MEMORY ?= 1024
DISK   ?= 2

distdir = @PACKAGE_TARNAME@-@PACKAGE_VERSION@
prefix = @prefix@
datarootdir = @datarootdir@
datadir = @datadir@
imagedir = @datadir@/eucalyptus/service-images

define destroyvm
virsh undefine $<; virsh destroy $<; true
endef

.PHONY: all build build-py clean dist distclean distdir image install install-py

all: build

build: build/image/eucalyptus-service-image.raw build-py

build-py: setup.py $(wildcard bin/*) $(wildcard esitoolsupport/*)
	@PYTHON@ setup.py build

build/image/eucalyptus-service-image.raw: eucalyptus-service-image.ks
	mkdir -p build/image
	$(destroyvm)
	@VIRT_INSTALL@ --name $< \
		--initrd-inject $< \
		--extra-args ks="file:/$< console=tty0 console=ttyS0,115200 serial" \
		--location @INSTALL_TREE@ \
		--disk $@,size=$(DISK) \
		--vcpus $(CPUS) --ram $(MEMORY) \
		--graphics none \
		--hvm --accelerate --noreboot \
		--noautoconsole --console pty,target_type=serial \
		; STATUS=$$?; exit $$STATUS
	while virsh list | grep $<; do echo "Waiting for vm to complete"; sleep 30; done
	@VIRT_SYSPREP@ -a $@
	$(destroyvm);

%.tar.xz: %.raw
	tar -cJS -f $@ $<

install: build/image/eucalyptus-service-image.tar.xz install-py
	install -D -m 0644 $< $(DESTDIR)$(imagedir)/@PACKAGE_TARNAME@-@PACKAGE_VERSION@.tar.xz

ifdef DESTDIR
install-py: build-py
	@PYTHON@ setup.py install -O1 --skip-build --root $(DESTDIR)
else
install-py: build-py
	@PYTHON@ setup.py install -O1 --skip-build
endif

distdir: bin configure configure.ac esitoolsupport eucalyptus-service-image.ks.in IMAGE-LICENSE Makefile.in README.md setup.py
	rm -rf $(distdir)
	mkdir -p $(distdir)
	cp -pR $^ $(distdir)

dist: distdir
	mkdir -p dist
	tar -cJ -f dist/$(distdir).tar.xz $(distdir)
	rm -rf $(distdir)

clean:
	rm -rf build
	rm -rf dist
	rm -rf $(distdir)

distclean: clean
	rm -f  Makefile
	rm -rf autom4te.cache
	rm -f  config.log
	rm -f  config.status
	rm -f  *.ks
